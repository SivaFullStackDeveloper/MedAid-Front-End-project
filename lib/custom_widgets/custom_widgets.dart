import 'package:carousel_slider/carousel_slider.dart';
import 'package:dots_indicator/dots_indicator.dart';
import 'package:flutter/material.dart';

class CustomWidgets {
  int currentIndex = 0;
  List<String> icons = [
    'assets/home.png',
    'assets/shield.png',
    'assets/secure.png'
  ];
  List<String> carouselIcons = [
    'assets/textTube.png',
    'assets/bolt.png',
    'assets/description.png'
  ];
  List<String> carouselText = [
    "Sample: Blood",
    "Fasting: Yes",
    "Reports In: 12 Hours",
  ];
  List<String> text = [
    "Home Collection",
    "NABL Accreddited",
    "100% Secure",
  ];

  List<String> howItWorksTextHeadings = [
    "Vaccinated Phelebotomists ",
    "Safety Precautions",
    "Sample Collection ",
    "Accurate Digital Reports",
  ];
  List<String> howItWorksSubText = [
    "Only Vaccinated Phlebotomists are assigned orders",
    "Phlebo wears mask, face shield and gloves and they always sanitizes themselfs before visiting the location",
    "Vaccinated Phlebotomists collect from syringe in the barcoded vials",
    "The reports are generated by clinically processed machines and clinically reviewed by doctors",
  ];

  List<String> categoriesText = [
    'Brain',
    'Heart',
    'Stomach',
    'Liver',
    'Lungs',
    'Kidneys',
    'Colon',
    'Pancreas',
    'Bladder',
  ];
  List<String> categoriesIcons = [
    'assets/brain.png',
    'assets/heart.png',
    'assets/stomach.png',
    'assets/liver.png',
    'assets/lungs.png',
    'assets/kidneys.png',
    'assets/colon.png',
    'assets/pancreas.png',
    'assets/bladder.png',
  ];

  customTextSpan(
      {required text, required color, required fontSize, required fontWeight}) {
    return TextSpan(
      text: text,
      style: TextStyle(
        color: color,
        fontSize: fontSize,
        fontFamily: 'Roboto',
        fontWeight: fontWeight,
        letterSpacing: 0.50,
      ),
    );
  }

  customTextWidget(
      {required text,
      required color,
      required double fontSize,
      required fontWeight,
      required bool underline}) {
    return Text(
      text,
      overflow: TextOverflow.ellipsis,
      maxLines: 2,
      style: TextStyle(
        decoration: underline == true ? TextDecoration.underline : null,
        decorationColor:
            underline == true ? const Color(0xFF7444FF) : Colors.transparent,
        decorationThickness: underline == true ? 2 : 0,
        color: color,
        fontSize: fontSize,
        fontFamily: "Roboto",
        fontWeight: fontWeight,
      ),
    );
  }

  homeScreenIconWithText({
    required List icons,
    required List text,
  }) {
    return Padding(
      padding: const EdgeInsets.only(top: 9.0, left: 27, right: 27),
      child: SizedBox(
        height: 17,
        child: ListView.builder(
            shrinkWrap: true,
            physics: const NeverScrollableScrollPhysics(),
            scrollDirection: Axis.horizontal,
            itemCount: icons.length,
            itemBuilder: (context, index) {
              return Padding(
                padding: const EdgeInsets.only(right: 3.0),
                child: Row(
                  children: [
                    Padding(
                      padding: const EdgeInsets.only(right: 1.0),
                      child: Image.asset(icons[index], height: 14, width: 17),
                    ),
                    customTextWidget(
                      text: text[index],
                      color: Colors.black,
                      fontSize: 10.0,
                      fontWeight: FontWeight.w400,
                      underline: false,
                    ),
                  ],
                ),
              );
            }),
      ),
    );
  }

  carouselIconWithText({
    required List icons,
    required List text,
  }) {
    return Expanded(
      child: ListView.builder(
          shrinkWrap: true,
          physics: const NeverScrollableScrollPhysics(),
          scrollDirection: Axis.vertical,
          itemCount: icons.length,
          itemBuilder: (context, index) {
            return Padding(
              padding: const EdgeInsets.only(top: 3.0),
              child: Row(
                children: [
                  Padding(
                    padding: const EdgeInsets.only(right: 5.0),
                    child: Image.asset(icons[index], height: 16, width: 16),
                  ),
                  customTextWidget(
                    text: text[index],
                    color: Colors.black,
                    fontSize: 12.0,
                    fontWeight: FontWeight.w400,
                    underline: false,
                  ),
                ],
              ),
            );
          }),
    );
  }

  bookWidget({required text, required image}) {
    return Expanded(
      child: Container(
        height: 100,
        //width: 149,
        decoration: ShapeDecoration(
          color: Colors.white,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          ),
        ),
        child: Padding(
          padding: const EdgeInsets.only(left: 15.0),
          child: Row(
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Expanded(
                    child: SizedBox(),
                  ),
                  Expanded(
                      child: customTextWidget(
                          text: 'Book',
                          color: Colors.black,
                          fontSize: 14.0,
                          fontWeight: FontWeight.w400,
                          underline: false)),
                  Expanded(
                      child: customTextWidget(
                          underline: false,
                          text: text,
                          color: Colors.black,
                          fontSize: 16.0,
                          fontWeight: FontWeight.w500))
                ],
              ),
              Expanded(
                  child: Image.asset(
                image,
              )),
            ],
          ),
        ),
      ),
    );
  }

  headingWithViewAllText({required text, required text2, required underline}) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        customTextWidget(
          underline: false,
          text: text,
          color: Colors.black,
          fontSize: 14,
          fontWeight: FontWeight.w500,
        ),
        customTextWidget(
          underline: underline,
          text: text2,
          color: const Color(0xFF7444FF),
          fontSize: 14,
          fontWeight: FontWeight.w500,
        ),
      ],
    );
  }

  dualTextWidget(
      {required text,
      required text2,
      required fontWeight,
      required double fontSize,
      required double fontSize2}) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        customTextWidget(
          text: text,
          color: Colors.black,
          fontSize: 14,
          fontWeight: fontWeight,
          underline: false,
        ),
        customTextWidget(
          text: text2,
          color: Colors.black,
          fontSize: fontSize2,
          fontWeight: fontWeight,
          underline: false,
        ),
      ],
    );
  }

  customButtons(
      {required double height,
      required border,
      required color,
      required text}) {
    return Expanded(
      child: Container(
        height: height,
        decoration: ShapeDecoration(
          color: border == true ? color : Colors.white,
          shape: RoundedRectangleBorder(
            side: BorderSide(
                width: border == false ? 1 : 0,
                color: border == false
                    ? const Color(0xFF7444FF)
                    : Colors.transparent),
            borderRadius: BorderRadius.circular(5),
          ),
        ),
        child: Center(
            child: customTextWidget(
                text: text,
                color: border == false ? const Color(0xFF7444FF) : Colors.white,
                fontSize: 12,
                fontWeight: FontWeight.w600,
                underline: false)),
      ),
    );
  }

  categoriesWidget() {
    return Expanded(
      child: GridView.count(
          shrinkWrap: true,
          crossAxisCount: 3,
          physics: const NeverScrollableScrollPhysics(),
          children: List.generate(categoriesIcons.length, (index) {
            return Column(
              children: [
                SizedBox(
                  width: 65,
                  height: 65,
                  child: Stack(
                    children: [
                      Container(
                        width: 65,
                        height: 65,
                        decoration: const ShapeDecoration(
                          color: Color(0xFFFFEBDA),
                          shape: OvalBorder(),
                        ),
                      ),
                      Center(child: Image.asset(categoriesIcons[index]))
                    ],
                  ),
                ),
                customTextWidget(
                    text: categoriesText[index],
                    color: Colors.black,
                    fontSize: 12,
                    fontWeight: FontWeight.w400,
                    underline: false)
              ],
            );
          })),
    );
  }

  howDoesItWorkTextWidgets() {
    return Expanded(
        child: ListView.builder(
            physics: const NeverScrollableScrollPhysics(),
            shrinkWrap: true,
            itemCount: 4,
            itemBuilder: (context, index) {
              return Padding(
                padding: const EdgeInsets.all(8.0),
                child: Row(
                  children: [
                    Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      children: [
                        Stack(
                          alignment: Alignment.center,
                          children: [
                            Container(
                              width: 25,
                              height: 25,
                              decoration: const ShapeDecoration(
                                color: Color(0xFFEFE9FF),
                                shape: OvalBorder(),
                              ),
                            ),
                            customTextWidget(
                              text: '${index + 1}',
                              underline: false,
                              color: Colors.black,
                              fontSize: 12,
                              fontWeight: FontWeight.w500,
                            ),
                          ],
                        ),
                        const SizedBox(height: 20),
                      ],
                    ),
                    const SizedBox(width: 10),
                    Expanded(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          customTextWidget(
                            text: howItWorksTextHeadings[index],
                            underline: false,
                            color: Colors.black,
                            fontSize: 12,
                            fontWeight: FontWeight.w400,
                          ),
                          customTextWidget(
                            text: howItWorksSubText[index],
                            underline: false,
                            color: const Color(0xFF828282),
                            fontSize: 12,
                            fontWeight: FontWeight.w400,
                          ),
                        ],
                      ),
                    )
                  ],
                ),
              );
            }));
  }

  customBottomBarIcons(VoidCallback tap, index, text, icon, color) {
    return InkWell(
      splashColor: Colors.transparent,
      focusColor: Colors.transparent,
      highlightColor: Colors.transparent,
      onTap: tap,
      child: Column(
        children: [
          AnimatedContainer(
            height: 30,
            width: 60,
            decoration: BoxDecoration(
                color: color, borderRadius: BorderRadius.circular(20)),
            duration: const Duration(milliseconds: 300),
            curve: Curves.linear,
            child: Image.asset(icon),
          ),
          customTextWidget(
              text: text,
              color: Colors.black,
              fontSize: 12,
              fontWeight: FontWeight.w600,
              underline: false)
        ],
      ),
    );
  }
}
